<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~
  ~      Copyright (c) 2018-2025, lengleng All rights reserved.
  ~
  ~  Redistribution and use in source and binary forms, with or without
  ~  modification, are permitted provided that the following conditions are met:
  ~
  ~ Redistributions of source code must retain the above copyright notice,
  ~  this list of conditions and the following disclaimer.
  ~  Redistributions in binary form must reproduce the above copyright
  ~  notice, this list of conditions and the following disclaimer in the
  ~  documentation and/or other materials provided with the distribution.
  ~  Neither the name of the pig4cloud.com developer nor the names of its
  ~  contributors may be used to endorse or promote products derived from
  ~  this software without specific prior written permission.
  ~  Author: lengleng (wangiegie@gmail.com)
  ~
  -->

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pt.ptdealerproc.mapper.ProcNodeMapper">

  		<resultMap id="BaseResultMap" type="com.pt.ptdealerproc.entity.ProcNode">
	  			<id property="nodeId" column="node_id"/>
				<result property="nodeCode" column="node_code"/>
				<result property="nodeName" column="node_name"/>
				<result property="status" column="status"/>
				<result property="createBy" column="create_by"/>
				<result property="createTime" column="create_time"/>
				<result property="remark" column="remark"/>
				<result property="delFlag" column="del_flag"/>
		</resultMap>

		<sql id="selectProcNode">
			select n.node_id, n.node_code,n.node_name,n.status,n.create_by,n.create_time,n.remark
			from dealer_node n
		</sql>

	<select id="getProcNodePage" resultMap="BaseResultMap">
		<include refid="selectProcNode"/>
		<where>
		n.del_flag = '0'
		<if test="query.nodeCode != null and query.nodeCode != ''">
			AND n.node_code like concat('%', #{query.nodeCode}, '%')
		</if>
		<if test="query.nodeName != null and query.nodeName != ''">
			AND n.node_name like concat('%', #{query.nodeName}, '%')
		</if>
		<if test="query.status != null and query.status != ''">
			AND n.status = #{query.status}
		</if>
		</where>
		ORDER BY n.create_time DESC
	</select>

	<select id="getProcNodeList" resultMap="BaseResultMap">
		select n.node_id, n.node_code,n.node_name
		from dealer_node n
		<where>
			n.del_flag = '0' and n.status = '0'
		</where>
		ORDER BY n.node_code ASC
	</select>

	<select id="selectNodeList" resultMap="BaseResultMap">
		<include refid="selectProcNode"/>
		<where>
			<if test="nodeCode != null and nodeCode != ''">
				AND node_code like concat('%', #{nodeCode}, '%')
			</if>
			<if test="status != null and status != ''">
				AND status = #{status}
			</if>
			<if test="nodeName != null and nodeName != ''">
				AND node_name like concat('%', #{nodeName}, '%')
			</if>
		</where>
	</select>

	<select id="selectNodeAll" resultMap="BaseResultMap">
		<include refid="selectProcNode"/>
	</select>

	<select id="selectNodeById"  resultMap="BaseResultMap">
		<include refid="selectProcNode"/>
		where node_id = #{nodeId}
	</select>

	<select id="checkNodeNameUnique"  resultMap="BaseResultMap">
		<include refid="selectProcNode"/>
		where node_name=#{nodeName}
	</select>

	<select id="checkNodeCodeUnique"  resultMap="BaseResultMap">
		<include refid="selectProcNode"/>
		where node_code=#{nodeCode}
	</select>

	<update id="updateNode" >
		update dealer_node
		<set>
			<if test="nodeCode != null and nodeCode != ''">node_code = #{nodeCode},</if>
			<if test="nodeName != null and nodeName != ''">node_name = #{nodeName},</if>
			<if test="status != null and status != ''">status = #{status},</if>
			<if test="remark != null">remark = #{remark},</if>
		</set>
		where node_id = #{nodeId}
	</update>

	<insert id="insertNode"  keyProperty="nodeId">
		insert into dealer_node(
		<if test="nodeId != null and nodeId != ''">node_id,</if>
		<if test="nodeCode != null and nodeCode != ''">node_code,</if>
		<if test="nodeName != null and nodeName != ''">node_name,</if>
		<if test="status != null and status != ''">status,</if>
		<if test="remark != null and remark != ''">remark,</if>
		<if test="createBy != null and createBy != ''">create_by,</if>
		create_time
		)values(
		<if test="nodeId != null and nodeId != ''">#{nodeId},</if>
		<if test="nodeCode != null and nodeCode != ''">#{nodeCode},</if>
		<if test="nodeName != null and nodeName != ''">#{nodeName},</if>
		<if test="status != null and status != ''">#{status},</if>
		<if test="remark != null and remark != ''">#{remark},</if>
		<if test="createBy != null and createBy != ''">#{createBy},</if>
		sysdate()
		)
	</insert>

	<delete id="deleteNodeById" >
		delete from dealer_node where node_id = #{nodeId}
	</delete>

	<delete id="deleteNodeByIds" >
		delete from dealer_node where node_id in
		<foreach collection="array" item="nodeId" open="(" separator="," close=")">
			#{nodeId}
		</foreach>
	</delete>

</mapper>
